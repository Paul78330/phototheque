# Définit les étapes du pipeline
stages:
  - build
  - test_unitaire
  - test_integration
  - test_e2e
  - test_QA
  - debug

# Définit des variables d'environnement pour Docker
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_CERT_PATH: ""
  DOCKER_TLS_VERIFY: ""

# Exécute 'docker info' avant chaque job pour afficher des informations sur l'environnement Docker
before_script:
  - docker info

# Job 'build' pour construire les images Docker de l'application
build:
  stage: build
  script:
    - docker-compose build
  # Conserve l'ensemble du répertoire de travail comme artefact pour les jobs suivants
  artifacts:
    paths:
      - ./


# Job 'tests_unitaires' pour exécuter les tests unitaires de l'application
tests_unitaires:
  stage: test_unitaire
  script:
    - docker-compose up test
  artifacts:
    reports:
      junit: test-results/resultat_tests.xml
    paths:
      - test-results/resultat_tests.xml
    when: always

# Job 'tests_integration' pour exécuter les tests d'intégration de l'application
tests_integration:
  stage: test_integration
  script:
    - docker-compose up -d app
    - docker-compose run -T app npm run test:integration
    - docker-compose down
  artifacts:
    reports:
      junit: integration-test-results/resultat_tests_integration.xml
    paths:
      - integration-test-results/resultat_tests_integration.xml
    when: always

# Job 'tests_e2e' pour exécuter les tests end-to-end (e2e) avec Cypress
tests_e2e:
  stage: test_e2e
  script:
    - DOCKERIZE_VERSION=v0.6.1 && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && chmod +x /usr/local/bin/dockerize && export PATH=$PATH:/usr/local/bin
    - docker-compose up -d app
    - dockerize -wait tcp://app:3000 -timeout 5m
    - docker-compose up cypress
    # - docker-compose down
  artifacts:
    paths:
      - cypress/videos/*
      - cypress/screenshots/*
      - download/*
    when: always

test_QA:
  stage: test_QA
  script:
    - docker-compose run -T eslint
  artifacts:
    paths:
      - eslint-report.xml
    reports:
      junit: eslint-report.xml
    when: always